
*Gerana
*ov00 life stage
*ov01 life force
*ov02 life length

*ov10 direction
*ov11 direction of wall (if applic.)
*ov40 (random) how many 'walks' a critter does


* Baby gerana: base 2, adult gerana: base 18
* reps 3
*	new: simp 2 15 21814 "gp_gerana" 42 0 2000
*	mesg wrt+ targ 1000 25820 1519 0
* repe


* Gerana creation script
scrp 2 15 21814 1000
	doif base eq 0
		doif rand 0 1 eq 1
			base 18
		else
			base 2
		endi
	endi
	pose 0
	attr 194
	elas .1
	accg 1
	perm 100
*Set basic variables
	setv ov40 0
	setv ov10 0
	setv ov11 0
	setv ov02 rand 70 120
	frat 2
	tick 20
	mvsf _p1_ _p2_
endm


*Gerana

scrp 2 15 21814 9
	lock
	doif base eq 2
		gsub babywalk
		doif ov02 lt 1
			gsub grow
		endi
	elif base eq 18
		gsub adultwalk
		doif ov02 lt 1
			gsub die
		endi
	endi
	subv ov02 1

	subr grow
		inst
		base 18
		pose 1
		mvsf posl post
		slow
		setv ov02 rand 70 120
	retn

	subr die
		lock
		doif base eq 18
			cato 10
			targ ownr
			frat 50
			doif ov10 eq 1
				anim [20 21 22 23]
			else
				anim [16 17 18 19]
			endi
			over
			kill targ
		elif base eq 2
			cato 10
			targ ownr
			frat 50
			doif ov10 eq 1
				anim [14 15]
			else
				anim [12 13]
			endi
			over
			kill targ
		endi
		unlk
	retn

	subr babywalk
		setv ov40 rand 1 6
		setv ov10 rand 1 -1
		wait rand 1 10

		doif obst rght lt 5
			setv ov11 1
		elif obst left lt 5
			setv ov11 2
		else
			setv ov11 0
		endi

		doif carr eq null and fall = 0

*Checks for walls
			doif ov11 = 1
				gsub babyleft
			endi
			doif ov11 = 2
				gsub babyright
			endi
*Checks if it is going right
			doif ov10 = 1
				gsub babyright
			endi
*Checks if it is going left
			doif ov10 = -1
				gsub babyleft
			endi
		else
			stop
		endi
	retn

*The going right subroutine
	subr babyright
		reps ov40
			anim [6 7]
			velo 1.2 -1
			over
			anim [8 9]
			velo 1.2 -1
			over
			anim [10 11]
			velo 1.2 -1
			over
		repe
	retn

*The going left subroutine
	subr babyleft
		reps ov40
			anim [0 1]
			velo -1 -1
			over
			anim [2 3]
			velo -1 -1
			over
			anim [4 5]
			velo -1 -1
			over
		repe
	retn

	subr adultwalk

		inst
		setv va20 0
		rnge 250
		esee 2 15 21814
			addv va20 1
		next
		esee 2 18 21814
			addv va20 1
		next
		doif va20 lt 8 and rand 0 10 eq 10
			setv va00 posx
			setv va01 posy
			new: simp 2 18 21814 "gp_gerana" 2 0 rand 1500 2500
			mesg wrt+ targ 1000 va00 va01 0
		endi

		targ ownr
		setv ov40 rand 1 6
		setv ov10 rand 1 -1
		wait rand 1 10

		doif obst rght lt 5
			setv ov11 1
		elif obst left lt 5
			setv ov11 2
		else
			setv ov11 0
		endi

		doif carr eq null and fall = 0

*Checks for walls
			doif ov11 = 1
				gsub left
			endi
			doif ov11 = 2
				gsub right
			endi
*Checks if it is going right
			doif ov10 = 1
				gsub right
			endi
*Checks if it is going left
			doif ov10 = -1
				gsub left
			endi

		else
			stop
		endi
	retn

*The going right subroutine
	subr left
		reps ov40
			anim [0 1]
			velo -2 -1.5
			over
			anim [2 3]
			velo -2 -1.5
			over
			anim [4 5]
			velo -2 -1.5
			over
			anim [6 7]
			velo -2 -1.5
			over
		repe
	retn

*The going left subroutine
	subr right
		reps ov40
			anim [8 9]
			velo 2.2 -1.5
			over
			anim [10 11]
			velo 2.2 -1.5
			over
			anim [12 13]
			velo 2.2 -1.5
			over
			anim [14 15]
			velo 2.2 -1.5
			over
		repe
	retn



endm

scrp 2 18 21814 1000
	inst
	attr 194
	elas .1
	accg 1
	perm 100
	rnge 250
	setv ov00 10
	tick 150
	mvsf _p1_ _p2_
endm

scrp 2 18 21814 9
	inst
	rnge 1600
	setv va00 0
	esee 2 15 21814
		addv va00 1
	next
	doif va00 lt 4
		inst
		setv va00 posx
		setv va01 post
		new: simp 2 15 21814 "gp_gerana" 42 0 2000
		base 2
		pose 0
		mesg wrt+ targ 1000 va00 va01 1
		targ ownr
		frat 60
		anim [1 1 1]
		over
		kill ownr
		slow
	else
		subv ov00 1
		doif ov00 lt 1
			kill ownr
		endi
	endi
endm


rscr

*Gerana

enum 2 15 21814
	kill targ
next

enum 2 18 21814
	kill targ
next