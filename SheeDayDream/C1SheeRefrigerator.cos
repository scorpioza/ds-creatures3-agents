* C1 Refrigerator - a multiple cabin vehicle that vends honey, carrots, and cheese

* Dependencies:
*  c1refrigerator.c16
*  c1beehivehoney.c16
*  c1carrotvendorcarrot.c16
*  c1cheese.c16
*  c1plants.c16
*  c1seeds.c16
*  c1coconut.c16
*  c1d2.wav
*  c1h1.wav
*  c1r1.wav
*  c1r2.wav

* top shelf: 25  4 64 30
* middle shelf: 25 30 64 56
* bottom shelf:	25 56 62 81

inst
lock

enum 1 1 32303
	kill targ
next

new: vhcl 2 23 62303 "c1refrigerator" 1 0 200
pat: butt 1 "c1refrigerator" 1 3 0 0 10 [] 1001 0
seta va50 targ
pose 0
cabn 24 3 63 79
attr 198
elas 10
accg 25
*bhvr 5
bhvr 0
perm 60
aero 0
tick 40
emit 8 0.5
rnge 250
mesg writ targ 1004

setv va00 9047
setv va01 9147.900391
mvsf va00 va01

*************************
** Scripts

scrp 1 1 32303 9
*	monitor timer
	inst
	lock
	doif movs = 0
*		not being carried, so refrigerator must have been removed
		setv va00 0
		targ ownr
		etch 2 11 0
			kill targ
		next
		targ ownr
		etch 2 8 0
			kill targ
		next
		targ ownr
		etch 2 3 0
			kill targ
		next
		doif va00 = 0
			targ ownr
			kill targ
		endi
	endi
endm

scrp 2 23 62303 1004
* 	the shelf spawn script
	inst
	lock

*	check for the refrigerator monitor
	setv va20 0
	epas 1 1 32303
		addv va20 1
	next

	targ ownr
	doif va20 <> 1
*		not right number of monitors!
		epas 1 1 32303
			kill targ
		next
		targ ownr
		setv va00 posl
		setv va01 post
		addv va00 25
		addv va01 4
* 		make the refrigerator monitor
		new: simp 1 1 32303 "c1refrigerator" 1 4 200
		tick 20
		attr 17
		accg 0
		fric 100
		aero 100
		mvsf va00 va01
		setv va02 0
		loop
			spas ownr targ
			wait 1
			inst
			addv va02 1
		untl targ = null or carr = ownr or va02 > 100
	endi
	targ ownr

*	check for enough food
	setv va20 0
	epas 2 11 0
		addv va20 1
	next

	targ ownr
	doif va20 < 3 and movs = 0
*		not enough food (top shelf)
		setv va00 posl
		setv va01 post
		addv va00 30
		addv va01 9
		setv va03 rand 1 2
		doif va03 = 1
*			make honey

			doif totl 2 11 32301 > 0
				new: simp 2 11 32301 "c1beehivehoney" 3 13 502
				setv ov99 5
			else
				** Peaking Pie 
				new: simp 2 11 7 "ds empathic vendor" 3 42 425
				bhvr 48
				perm 64
				elas 30
				accg 5
				fric 100
				tick 120
			endi

			addv va01 1
			addv va00 2		

		elif va03 = 2
*			make cheese

			doif totl 2 11 32300 > 0
				new: simp 2 11 32300 "c1cheese" 3 0 200
				pose 2
			else
				** Peaking Pie 
				new: simp 2 11 7 "ds empathic vendor" 3 42 425
				bhvr 48
				perm 64
				elas 30
				accg 5
				fric 100
				tick 120
			endi

			addv va00 4
			addv va01 3

		endi
		attr 199
		elas 0
		fric 100
		aero 0
		accg 0
		bhvr 48
		perm 60
		emit 8 0.5
		mvsf va00 va01
*		add food to shelf
		setv va02 0
		loop
			spas ownr targ
			wait 1
			inst
			addv va02 1
		untl targ = null or carr = ownr or va02 > 10
	endi
	targ ownr

*	check for enough fruit (second shelf)
	setv va20 0
	epas 2 8 0
		addv va20 1
	next
	doif va20 < 3 and movs = 0
		setv va00 posl
		setv va01 post
		addv va00 26
		addv va01 41

		setv va03 rand 1 4
		doif va03 = 1
*			make lemon
		
			doif totl 2 8 32390 > 0

				new: vhcl 2 8 32390 "c1plants" 3 0 101
				cabp 0
				cabw 1
				cabn -10 -25 34 4
				pose 0
				attr 719
			else

				new: simp 2 8 7 "ds lemon pod" 2 30 355
				attr 194
				bhvr 48
				accg 2
				perm 64
				fric 100
				elas 30
				aero 2
	** "eaten" is used to determine how the lemon (and the lemon detritus) should appear
				sets name "eaten" "no"

				tick 1000

			endi

			addv va01 1
			addv va00 6

		elif va03 = 2

*			make apple		

			doif totl 2 8 62315 > 0		

				new: simp 2 8 62315 "wooden_box" 2 1 5001
				attr 195
				bhvr 48
				elas 30
				accg 5
				fric 80
				perm 60
				seta va05 targ
				setv ov61 8

			else

				new: simp 2 8 7 "ds lemon pod" 2 30 355
				attr 194
				bhvr 48
				accg 2
				perm 64
				fric 100
				elas 30
				aero 2
	** "eaten" is used to determine how the lemon (and the lemon detritus) should appear
				sets name "eaten" "no"

				tick 1000

			endi


		elif va03 = 3


*			make tomato		

			doif totl 2 8 32398 > 0

				new: simp 2 8 32398 "c1plants" 1 24 101
				mira 1
				attr 199

			else
				new: simp 2 8 7 "ds lemon pod" 2 30 355
				attr 194
				bhvr 48
				accg 2
				perm 64
				fric 100
				elas 30
				aero 2
	** "eaten" is used to determine how the lemon (and the lemon detritus) should appear
				sets name "eaten" "no"

				tick 1000
			endi

			addv va01 1
			addv va00 6

		else
*			make bramboo		

			new: simp 2 8 8 "bramboo" 10 97 306
			seta ov16 null

			attr 195
			setv va83 rand 1.0 3.5
			accg va83
			elas 50
			fric 100
			aero 1

			perm 50
			bhvr 48
	** GENETIC VARIABLES
	** ov40 = GENETIC Cane Height
			setv ov40 rand 6 8
	** ov41 = GENETIC Petal Red
			setv ov41 rand 170 255
	** ov42 = GENETIC Petal Green
			setv ov42 rand 170 255
	** ov43 = GENETIC Petal Blue
			setv ov43 rand 170 255
	** ov44 = GENETIC Petal Rotation
			setv ov44 rand 0 255
	** ov45 = GENETIC Petal Swap
			setv ov45 rand 0 255
	** ov46 = GENETIC Fruit Red
			setv ov46 rand 70 255
	** ov47 = GENETIC Fruit Green
			setv ov47 rand 70 255
	** ov48 = GENETIC Fruit Blue
			setv ov48 rand 70 255
	** ov49 = GENETIC Fruit Rotation
			setv ov49 rand 0 255
	** ov50 = GENETIC Fruit Swap
			setv ov50 rand 0 255
	** Store the genetical height of the parent Bramboo cane
			setv ov40 rand 6 8
	** Tint the Fruit
			doif game "Bramboo_Genetic_RotnSwap" = 1
				tint ov46 ov47 ov48 ov49 ov50
			else
				tint ov46 ov47 ov48 128 128
			endi
	** Use the first fruit pose as the base
			setv va99 1
			base va99
	** Store the Bramboo
			seta ov16 ownr
	*				dbg: asrt type ov16 <> 0
	** Store original flower
			setv va29 va00
	** Minus since it was added to in a loop
			subv va29 1
	** Addition of base flower 60
			setv ov17 va28
	** Give it a random Rot time (not genetic... yet!)
			setv name "TimeToRot" rand 10 30
	** Make it emit the smell of protein
			emit 6 .5
	** Start the fruit ripening
			frat 50
			anim [0 1 2 3 4]
	** tick
			tick rand 400 600


			addv va00 2
		endi
		accg 0
		fric 100
		elas 0
		aero 100
		bhvr 48
		perm 60
		emit 6 .50
		mvsf va00 va01
		setv va02 0
		loop
			spas ownr targ
			wait 1
			inst
			addv va02 1
		untl targ = null or carr = ownr or va02 > 10
	endi
	targ ownr

*check for enough seeds (bottom shelf)
	setv va20 0
	epas 2 3 0
		addv va20 1
	next

	doif va20 < 3 and movs = 0
		setv va00 posl
		setv va01 post
		addv va00 11
		addv va01 86

*		make seeds here
		setv va03 rand 1 3
		doif va03 = 1
*			make empathic vendor seed

			new: simp 2 3 15 "ds empathic vendor" 1 41 427
			attr 195
			bhvr 48
			perm 64
			elas 40
			accg 4
			fric 100
			tick 120

		elif va03 = 2
*			make capillata top level seed

			new: simp 2 3 17 "justanut pod" 9 18 51
			attr 194
			perm 64
			bhvr 48
			pose 1
			accg 3
			aero 5
			fric 99
			elas 20
			tick 200

		elif va03 = 3
*			make sunflower seed

			doif totl 2 3 62314 > 0


				doif rand 0 1 = 1
					new: simp 2 3 62314 "c1seeds" 4 1 200
					setv ov99 1
				else
					new: simp 2 3 62314 "c1seeds" 4 5 200
					setv ov99 0
				endi
				attr 199
				bhvr 48
				accg .8
				aero 0
				elas 25
				perm 60
				doif rand 0 1 = 1
					anim [0 1 2 3 255]
				else
					anim [0 3 2 1 255]
				endi

			else	

				new: simp 2 3 15 "ds empathic vendor" 1 41 427
				attr 195
				bhvr 48
				perm 64
				elas 40
				accg 4
				fric 100
				tick 120
			endi

		endi
		attr 199
		bhvr 48
		aero 0
		elas 25
		perm 60
		fric 100
		emit 7 0.5
		mvsf va00 va01
		setv va02 0
		loop
			spas ownr targ
			wait 1
			inst
			addv va02 1
		untl targ = null or carr = ownr or va02 > 10
	endi
	targ ownr
	part 1
	doif pose = 0
		epas 2 0 0
			doif gnus = 11 or gnus = 8 or gnus = 3
				paus 1
			endi
		next
	else
		epas 2 0 0
			doif gnus = 11 or gnus = 8 or gnus = 3
				paus 0
			endi
		next
	endi
endm

scrp 2 23 62303 0
*	refrigerator is deactivated
	inst
	lock
	stim writ from 15 1.0
	mesg writ ownr 1001
endm

scrp 2 23 62303 1
*	refrigerator is activated
	inst
	lock
	stim writ from 13 1.0
	mesg writ ownr 1001
endm

scrp 2 23 62303 4
*	refrigerator is picked up
	inst
	part 1
	doif pose <> 0
		mesg writ ownr 1001
	endi


endm

scrp 2 23 62303 6
*	refrigerator hits something
	setv va00 velx
	absv va00
	setv va01 vely
	absv va01
	doif va00 > 2 or va01 > 2
		sndc "c1d2"
	endi
endm

scrp 2 23 62303 9
*	refrigerator timer
	inst
	lock
	tick 40
	mesg writ ownr 1004
	setv va00 0
	esee 4 0 0
		addv va00 1
	next
	targ ownr
	part 1
	doif va00 = 0 and pose <> 0
		mesg writ ownr 1001
	elif va00 > 0 and pose = 0
		mesg writ ownr 1001
	endi

endm

scrp 2 23 62303 125
	inst
	lock
	mesg wrt+ ownr 1004 0 0 rand 20 40
endm

scrp 2 23 62303 1001
*	refrigerator opens or closes
	inst
	lock
	doif from = pntr
		tick 200
	endi
	part 1
	doif pose = 0
		sndc "c1r1"
		anim [0 1 2]
*		make the cabin open air
		attr 710
		epas 0 0 0
			doif targ <> ownr and fmly <> 1 and gnus <> 1 and spcs <> 32303
				paus 0
			endi
		next
		targ ownr
	elif pose = 2
		sndc "c1r2"
		anim [2 1 0]
*		make the cabin closed 
		attr 198
		epas 0 0 0
			doif targ <> ownr and fmly <> 1 and gnus <> 1 and spcs <> 32303
				paus 1
			endi
		next
		targ ownr
	endi
endm





scrp 2 11 7 5
	inst
	lock
*	pie is dropped

	perm 64
	elas 30

	fric 100
*	aero 10
	accg 5
endm

scrp 2 8 7 5
	inst
	lock
*	lemon is dropped

	perm 64
	elas 30

	fric 100
	aero 2
	accg 2
endm


scrp 2 8 62315 5
	inst
	lock
*	Apple is dropped

	perm 60
	elas 30
	fric 80
	accg 5
	aero 2
endm


rscr

rtar 2 23 62303
enum 2 23 62303
	kill targ
next

scrx 2 23 62303 0
scrx 2 23 62303 1
scrx 2 23 62303 4
scrx 2 23 62303 1001
scrx 2 23 62303 1002
scrx 2 23 62303 2000

enum 1 1 32303
	mesg writ targ 9
next

*scrx 1 1 32303 9