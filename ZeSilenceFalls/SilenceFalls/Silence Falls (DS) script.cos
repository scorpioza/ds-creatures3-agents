* Autogenerated by the Creatures Map Editor
* For more info see http://cdn.creatures.net

***WATERFALL AREA***

*Graphics: mea
*Mapping/Coding: Grendel Man

*Widen the map - we'll need it
doif maph < 100000
	mapd mapw 100000
endi
doif mapw < 100000
	mapd 100000 maph
endi

*Injecting the metaroom and putting normal rooms in it
setv game "mapeditortmp" addm 97120 19535 1200 800 "waterfall-room-v3a"
mmsc 97720 19935 ""

setv va00 addr game "mapeditortmp" 97272 97333 20248 20248 20248 20288
rtyp va00 8
rmsc 97300 20255 ""
setv game "mapeditortmp_600" va00
setv va00 addr game "mapeditortmp" 97333 97431 20248 20248 20288 20298
rtyp va00 8
rmsc 97380 20255 ""
setv game "mapeditortmp_601" va00
setv va00 addr game "mapeditortmp" 97431 97491 20248 20248 20298 20286
rtyp va00 8
rmsc 97461 20255 ""
setv game "mapeditortmp_602" va00
setv va00 addr game "mapeditortmp" 97491 97554 20248 20248 20286 20248
rtyp va00 8
rmsc 97517 20255 ""

setv game "mapeditortmp_603" va00
setv va00 addr game "mapeditortmp" 97431 97554 20186 20186 20248 20248
rtyp va00 0
rmsc 97487 20220 ""
setv game "mapeditortmp_604" va00
setv va00 addr game "mapeditortmp" 97554 97621 20186 20186 20248 20238
rtyp va00 6
rmsc 97582 20212 ""
*C1-2
setv game "mapeditortmp_605" va00
setv va00 addr game "mapeditortmp" 97272 97431 20186 20186 20248 20248
rtyp va00 0
rmsc 97285 20220 ""
setv game "mapeditortmp_606" va00
setv va00 addr game "mapeditortmp" 97431 97621 20104 20104 20186 20186
rtyp va00 0
rmsc 97526 20145 ""
setv game "mapeditortmp_607" va00
setv va00 addr game "mapeditortmp" 97621 97822 20104 20104 20238 20218
rtyp va00 6
rmsc 97721 20161 ""
setv game "mapeditortmp_608" va00
setv va00 addr game "mapeditortmp" 97621 97822 19982 19982 20104 20104
rtyp va00 0
rmsc 97721 20043 ""
setv game "mapeditortmp_609" va00
setv va00 addr game "mapeditortmp" 97431 97621 19984 19982 20104 20104
rtyp va00 0
rmsc 97526 20044 ""
* B2
setv game "mapeditortmp_610" va00
setv va00 addr game "mapeditortmp" 97333 97431 20105 20104 20186 20186
rtyp va00 0
rmsc 97351 20145 ""
* B1
setv game "mapeditortmp_611" va00
setv va00 addr game "mapeditortmp" 97272 97333 20105 20105 20186 20186
rtyp va00 0
rmsc 97280 20145 ""
* A2
setv game "mapeditortmp_612" va00
setv va00 addr game "mapeditortmp" 97333 97431 19985 19984 20105 20104
rtyp va00 0
rmsc 97351 20044 ""
* A1
setv game "mapeditortmp_613" va00
setv va00 addr game "mapeditortmp" 97272 97333 20010 19985 20105 20105
rtyp va00 0
rmsc 97330 20100 ""
setv game "mapeditortmp_614" va00
setv va00 addr game "mapeditortmp" 97822 98001 20104 20104 20218 20211
rtyp va00 6
rmsc 97911 20157 ""
setv game "mapeditortmp_615" va00
setv va00 addr game "mapeditortmp" 97822 98001 19982 19983 20104 20104
rtyp va00 0
rmsc 97911 20043 ""
setv game "mapeditortmp_616" va00
setv va00 addr game "mapeditortmp" 98001 98176 20104 20104 20211 20211
rtyp va00 6
rmsc 98088 20157 ""
setv game "mapeditortmp_617" va00
setv va00 addr game "mapeditortmp" 98001 98176 19983 19985 20104 20104
rtyp va00 0
rmsc 98088 20043 ""
setv game "mapeditortmp_618" va00
setv va00 addr game "mapeditortmp" 98176 98269 20104 20104 20211 20211
rtyp va00 6
rmsc 98222 20157 ""
setv game "mapeditortmp_619" va00
setv va00 addr game "mapeditortmp" 98269 98296 20104 20104 20211 20193
rtyp va00 6
rmsc 98282 20148 ""
setv game "mapeditortmp_620" va00
setv va00 addr game "mapeditortmp" 98176 98269 19985 19985 20104 20104
rtyp va00 0
rmsc 98222 20044 ""
setv game "mapeditortmp_621" va00
setv va00 addr game "mapeditortmp" 98269 98296 19985 20002 20104 20104
rtyp va00 0
rmsc 98282 20044 ""
setv game "mapeditortmp_622" va00
setv va00 addr game "mapeditortmp" 97152 97299 19809 19809 19948 19953
rtyp va00 5
rmsc 97225 19881 ""
setv game "mapeditortmp_623" va00
setv va00 addr game "mapeditortmp" 97299 97471 19809 19808 19953 19956
rtyp va00 5
rmsc 97385 19882 ""
setv game "mapeditortmp_624" va00
setv va00 addr game "mapeditortmp" 97471 97616 19808 19808 19956 19950
rtyp va00 5
rmsc 97543 19879 ""
setv game "mapeditortmp_625" va00
setv va00 addr game "mapeditortmp" 97616 97820 19808 19808 19950 19950
rtyp va00 1
rmsc 97718 19879 ""
setv game "mapeditortmp_626" va00
setv va00 addr game "mapeditortmp" 97820 98001 19808 19806 19950 19942
rtyp va00 5
rmsc 97910 19875 ""
setv game "mapeditortmp_627" va00
setv va00 addr game "mapeditortmp" 98001 98146 19806 19803 19942 19929
rtyp va00 5
rmsc 98073 19867 ""
setv game "mapeditortmp_628" va00
setv va00 addr game "mapeditortmp" 98146 98296 19803 19803 19929 19923
rtyp va00 5
rmsc 98221 19863 ""
setv game "mapeditortmp_629" va00
setv va00 addr game "mapeditortmp" 97152 97299 19622 19622 19809 19809
rtyp va00 0
rmsc 97225 19715 ""
setv game "mapeditortmp_630" va00
setv va00 addr game "mapeditortmp" 97299 97616 19622 19622 19809 19808
rtyp va00 0
rmsc 97457 19715 ""
setv game "mapeditortmp_631" va00
setv va00 addr game "mapeditortmp" 97616 97820 19622 19622 19808 19808
rtyp va00 0
rmsc 97718 19715 ""
setv game "mapeditortmp_632" va00
setv va00 addr game "mapeditortmp" 97820 98001 19622 19622 19808 19806
rtyp va00 0
rmsc 97910 19714 ""
setv game "mapeditortmp_633" va00
setv va00 addr game "mapeditortmp" 98001 98146 19622 19622 19806 19803
rtyp va00 0
rmsc 98073 19712 ""
setv game "mapeditortmp_634" va00
setv va00 addr game "mapeditortmp" 98146 98296 19622 19622 19803 19803
rtyp va00 0
rmsc 98221 19712 ""
setv game "mapeditortmp_635" va00
setv va00 addr game "mapeditortmp" 97152 97616 19543 19543 19622 19622
rtyp va00 0
rmsc 97384 19582 ""
setv game "mapeditortmp_636" va00
setv va00 addr game "mapeditortmp" 97616 98001 19543 19543 19622 19622
rtyp va00 0
rmsc 97808 19582 ""
setv game "mapeditortmp_637" va00
setv va00 addr game "mapeditortmp" 98001 98296 19543 19543 19622 19622
rtyp va00 0
rmsc 98148 19582 ""
setv game "mapeditortmp_638" va00

door game "mapeditortmp_600" game "mapeditortmp_601" 100
door game "mapeditortmp_600" game "mapeditortmp_606" 100
door game "mapeditortmp_601" game "mapeditortmp_602" 100
door game "mapeditortmp_601" game "mapeditortmp_606" 100
door game "mapeditortmp_602" game "mapeditortmp_603" 100
door game "mapeditortmp_602" game "mapeditortmp_604" 100
door game "mapeditortmp_603" game "mapeditortmp_604" 100
* door game "mapeditortmp_603" game "mapeditortmp_605" 100
door game "mapeditortmp_604" game "mapeditortmp_605" 100
door game "mapeditortmp_604" game "mapeditortmp_606" 100

door game "mapeditortmp_604" game "mapeditortmp_607" 100
door game "mapeditortmp_605" game "mapeditortmp_607" 100
door game "mapeditortmp_605" game "mapeditortmp_608" 100
door game "mapeditortmp_606" game "mapeditortmp_611" 100
door game "mapeditortmp_606" game "mapeditortmp_612" 100
door game "mapeditortmp_607" game "mapeditortmp_608" 100
door game "mapeditortmp_607" game "mapeditortmp_610" 100
door game "mapeditortmp_607" game "mapeditortmp_611" 100
door game "mapeditortmp_608" game "mapeditortmp_609" 100
door game "mapeditortmp_608" game "mapeditortmp_615" 100

door game "mapeditortmp_609" game "mapeditortmp_610" 100
door game "mapeditortmp_609" game "mapeditortmp_616" 100
door game "mapeditortmp_610" game "mapeditortmp_613" 100
door game "mapeditortmp_611" game "mapeditortmp_612" 100
door game "mapeditortmp_611" game "mapeditortmp_613" 100
door game "mapeditortmp_612" game "mapeditortmp_614" 100
door game "mapeditortmp_613" game "mapeditortmp_614" 100
door game "mapeditortmp_615" game "mapeditortmp_616" 100
door game "mapeditortmp_615" game "mapeditortmp_617" 100
door game "mapeditortmp_616" game "mapeditortmp_618" 100

door game "mapeditortmp_617" game "mapeditortmp_618" 100
door game "mapeditortmp_617" game "mapeditortmp_619" 100
door game "mapeditortmp_618" game "mapeditortmp_621" 100
door game "mapeditortmp_619" game "mapeditortmp_620" 100
door game "mapeditortmp_619" game "mapeditortmp_621" 100
door game "mapeditortmp_620" game "mapeditortmp_622" 100
door game "mapeditortmp_621" game "mapeditortmp_622" 100
door game "mapeditortmp_623" game "mapeditortmp_624" 100
door game "mapeditortmp_623" game "mapeditortmp_630" 100
door game "mapeditortmp_624" game "mapeditortmp_625" 100

door game "mapeditortmp_624" game "mapeditortmp_631" 100
door game "mapeditortmp_625" game "mapeditortmp_626" 100
door game "mapeditortmp_625" game "mapeditortmp_631" 100
door game "mapeditortmp_626" game "mapeditortmp_627" 100
door game "mapeditortmp_626" game "mapeditortmp_632" 100
door game "mapeditortmp_627" game "mapeditortmp_628" 100
door game "mapeditortmp_627" game "mapeditortmp_633" 100
door game "mapeditortmp_628" game "mapeditortmp_629" 100
door game "mapeditortmp_628" game "mapeditortmp_634" 100
door game "mapeditortmp_629" game "mapeditortmp_635" 100

door game "mapeditortmp_630" game "mapeditortmp_631" 100
door game "mapeditortmp_630" game "mapeditortmp_636" 100
door game "mapeditortmp_631" game "mapeditortmp_632" 100
door game "mapeditortmp_631" game "mapeditortmp_636" 100
door game "mapeditortmp_632" game "mapeditortmp_633" 100
door game "mapeditortmp_632" game "mapeditortmp_637" 100
door game "mapeditortmp_633" game "mapeditortmp_634" 100
door game "mapeditortmp_633" game "mapeditortmp_637" 100
door game "mapeditortmp_634" game "mapeditortmp_635" 100
door game "mapeditortmp_634" game "mapeditortmp_638" 100

door game "mapeditortmp_635" game "mapeditortmp_638" 100
door game "mapeditortmp_636" game "mapeditortmp_637" 100
door game "mapeditortmp_637" game "mapeditortmp_638" 100

delg "mapeditortmp_600"
delg "mapeditortmp_601"
delg "mapeditortmp_602"
delg "mapeditortmp_603"
delg "mapeditortmp_604"
delg "mapeditortmp_605"
delg "mapeditortmp_606"
delg "mapeditortmp_607"
delg "mapeditortmp_608"
delg "mapeditortmp_609"
delg "mapeditortmp_610"
delg "mapeditortmp_611"
delg "mapeditortmp_612"
delg "mapeditortmp_613"
delg "mapeditortmp_614"
delg "mapeditortmp_615"
delg "mapeditortmp_616"
delg "mapeditortmp_617"
delg "mapeditortmp_618"
delg "mapeditortmp_619"
delg "mapeditortmp_620"
delg "mapeditortmp_621"
delg "mapeditortmp_622"
delg "mapeditortmp_623"
delg "mapeditortmp_624"
delg "mapeditortmp_625"
delg "mapeditortmp_626"
delg "mapeditortmp_627"
delg "mapeditortmp_628"
delg "mapeditortmp_629"
delg "mapeditortmp_630"
delg "mapeditortmp_631"
delg "mapeditortmp_632"
delg "mapeditortmp_633"
delg "mapeditortmp_634"
delg "mapeditortmp_635"
delg "mapeditortmp_636"
delg "mapeditortmp_637"
delg "mapeditortmp_638"

inst
***Begin Installation Scripts***

**Favorite Place
doif gnam = "Creatures 3"
	new: simp 1 1 18885 "fav_place_waterfall" 1 0 1
	attr 272
	mvto 97666 19713
	setv va00 posx
	setv va01 posy
	setv ov00 gmap va00 va01

	new: simp 1 2 18885 "fav_place_waterfall" 2 1 8505
	attr 52
	clac 0
	mvto 97666 19713
	flto 245 47
	tick 1
elif gnam = "Docking Station"
	new: simp 1 3 18885 "fav_place_waterfall" 1 0 1
	attr 272
	mvto 97666 19713
	tick 10
endi


**CA Emitters
*Manager
new: simp 1 1 18886 "blank" 1 0 1
attr 16
tick 10
*tint 255 255 255 128 128
mvto 97686 19849

*Emitters
*Set va00 to 1 to make emitters visible
setv va00 0

*Light
new: simp 1 1 18887 "blnk" 1 va00 1
attr 16
setv ov00 1
mvto 97359 19583

new: simp 1 1 18887 "blnk" 1 va00 1
attr 16
setv ov00 1
mvto 97765 19583

new: simp 1 1 18887 "blnk" 1 va00 1
attr 16
setv ov00 1
mvto 98111 19583

*Heat
new: simp 1 1 18887 "blnk" 1 va00 1
attr 16
setv ov00 2
mvto 97406 19693

new: simp 1 1 18887 "blnk" 1 va00 1
attr 16
setv ov00 2
mvto 98034 19700

*Bodies of Water
new: simp 1 1 18887 "blnk" 1 va00 1
attr 16
setv ov00 5
mvto 97188 20271

*Waterspout
new: simp 1 1 18888 "blnk" 1 va00 1
attr 16
tick 150
mvto 97940 20029

*Waterfall
new: simp 1 1 18785 "blnk" 1 0 1
attr 16
tick 1
*ov00 = season variable
setv ov00 0
mvto 97662 19559

*Lifts
new: simp 3 1 18885 "waterfall_navigation" 1 0 1000
attr 196
bhvr 3
accg 3
perm 50
elas 0
setv ov01 0
clac 0
mvsf 97778 19828
seta va00 targ
setv va02 grap posx posy

new: simp 3 1 18885 "waterfall_navigation" 1 0 1000
attr 196
bhvr 3
accg 3
perm 50
elas 0
setv ov01 1
clac 0
mvsf 97935 20104
seta va01 targ
setv va03 grap posx posy

*Direct the buttons to each other
targ va00
seta ov00 va01
targ va01
seta ov00 va00

*Link the rooms up
link va02 va03 75

*Doors
new: simp 2 2 18885 "waterfall_navigation" 1 1 3500
attr 198
bhvr 1
elas 0
seta va00 targ
mvsf 98189 19805

new: simp 2 2 18885 "waterfall_navigation" 1 1 3500
attr 198
bhvr 1
elas 0
seta ov00 va00
seta avar va00 0 targ
doif gnam = "Creatures 3"
	mvsf 2377 727
else
	mvsf 1001 9578
endi

**Waterfall Mushrooms
setv va00 0
*Population Monitors
reps 2
	new: simp 2 4 18785 "waterfall_cmsh" 15 0 va05
	attr 196
	bhvr 3
	accg 1
	aero 0
	perm va04
	elas 0
	fric 100
*ov00 = state (Permanently set to 4 for PMs)
	setv ov00 4
*ov01 = PM state (since these shrooms don't pay attention to their fruit count since they never die)
	setv ov01 0
	tick rand 100 300
	doif va00 = 0
		mvsf rand 97186 97462 19804
	else
		mvsf rand 97902 98187 19804
	endi
	addv va00 1
repe

*Inject some seeds
setv va00 0
reps 2
	reps 3
		new: simp 2 3 18785 "waterfall_cmsh" 1 16 rand 1000 6000
		attr 194
		bhvr 48
		accg 1
		aero 0
		perm rand 30 100
		elas 50
		fric 75
		tick rand 100 300
*Dormancy counter
		setv ov00 rand 10 15
		puhl -1 24 82
		doif va00 = 0
			mvsf 97371 19810
		else
			mvsf 98063 19768
		endi
		velo rand -5 5 rand -5 0
	repe
	addv va00 1
repe

**Watercup Shrooms
*Population Monitors
setv va00 0
reps 3
*Teal Shroom
	doif va00 = 0
		setv va06 1
*Blue Shroom
	elif va00 = 1
		setv va06 6
*Red Shroom
	else
		setv va06 11
	endi
	setv va08 0
	* Dark variation
	doif rand 0 1 eq 1
*		addv va06 21
		setv va08 1
	endi
	new: simp 2 4 18885 "watercup_shroom" 5 va06 va02
	setv ov01 va00
	* Dark variation
	doif va08 eq 1
		alph rand 50 150 1
	endi
	
	setv ov04 va08
	attr 196
	bhvr 1
	accg 4
	aero 0
	perm va03
	elas 0
	fric 100
*ov00 = state
	setv ov00 4
*ov02 = PM state
	setv ov02 0
	tick rand 150 450
	mvsf rand 97593 98225 20134
	addv va00 1
repe


*Spores
reps 10
	new: simp 2 3 18885 "watercup_shroom" 1 0 rand 1000 6000
	attr 195
	bhvr 48
	accg 0.1
	aero 0
	perm rand 30 100
	elas 10
	fric 70
*ov00 = growth checks
	setv ov00 0
*ov01 = dormancy counter
	setv ov01 0
	rnge 250
	tick rand 150 450
	puhl -1 16 31
	mvto 97917 20128
	velo rand -10 10 rand -10 0
repe

cmrp 97666 19713 0
endm

***Begin Event Scripts***

**Favorite Place
scrp 1 2 18885 9
	setv va00 0
	enum 1 1 18885
		setv va00 ov00
	next
	doif gmap posx posy = va00
		pose 1
	else
		pose 0
	endi
	setv ov00 va00
endm

scrp 1 2 18885 1
	sndc "fp_1"
	cmrp 97666 19713 0
	pose 1
endm

**CA Emitters
*Manager
scrp 1 1 18886 9
*Set constants - va00 is light, va01 is heat
	setv va00 2.0
*Heat is lower than light since it's not going to be very high anyway thanks to the waterfall
	setv va01 3.0

*Dawn - Both are at a third of their usual values
	doif time = 0
		divv va00 3
		divv va01 3
*Light gets set to its full value; heat is at half strength
	elif time = 1
		divv va01 2
*Afternoon - both are at full strength, don't alter anything		
	elif time = 2
*Evening - light goes down to two-thirds, heat down to half again 
	elif time = 3
		mulv va00 2
		divv va00 3
		divv va01 2
*Night - both are at 1/4 strength
	elif time = 4
		divv va00 4
		divv va01 4
	endi

*Tell the light and heat to function
	enum 1 1 18887
		doif ov00 = 1
			mesg wrt+ targ 1000 va00 0 0
		elif ov00 = 2
			mesg wrt+ targ 1000 va01 0 0
		else
*This is a water smell emitter; it has a constant value
			mesg wrt+ targ 1000 0.5 0 0
		endi
	next
endm

*Exceptions - they happen, unfortunately
scrp 1 1 18886 255
	tick tick
endm

*Light and heat emitters
scrp 1 1 18887 1000
	emit ov00 _p1_
endm

*Waterspout and "water" - this is for the cave only
**The waterfall does the same purpose for the upper level
scrp 1 1 18888 9
	setv va00 posl
	setv va01 post
	inst
	reps rand 2 4
		new: simp 1 1 18889 "blnk" 1 0 6000
		attr 208
		accg 1
		aero 1
		perm 100
		elas 0
		fric 100
		tick 100
		mvto va00 va01
		velo rand -15 15 rand -2 2
	repe
	slow
	targ ownr
endm

scrp 1 1 18889 6
	inst
	doif room ownr <> -1
		altr room ownr 3 0.3
		altr room ownr 4 0.1
	endi
	kill ownr
	slow
endm

scrp 1 1 18889 9
	doif room ownr <> -1
		altr room ownr 3 0.1
		altr room ownr 4 0.05
	endi
	kill ownr
endm

**Waterfall and Droplets
scrp 1 1 18785 9
*Season variables
*Spring
	doif sean = 0
		setv ov00 rand 3 6
*Summer
	elif sean = 1
		setv ov00 rand 1 2
*Autumn
	elif sean = 2
		setv ov00 rand 2 4
*Winter
	elif sean = 3
		setv ov00 1
	endi

*If the countdown is 0, create a water droplet
	setv va00 97538
	setv va01 97788
	setv va02 19613
	inst
	reps ov00
		new: simp 2 19 18785 "waterfall_droplet" 5 0 500
		attr 192
		accg rand 1 5
		aero 0
		perm 100
		elas 0
		fric 100
		tick 1
		alph rand 100 200 1
		mvsf rand va00 va01 va02
	repe
endm

*Droplet scripts
scrp 2 19 18785 9
*Kill the droplet if not splashed correctly
	doif rtyp grap posx posb = 8 or rtyp grap posx posb = 9 or vely = 0
		doif room ownr <> -1
			altr room targ 2 -0.01
			altr room targ 3 0.05
			altr room targ 4 0.01
		endi
		kill ownr
	endi
endm

*Collision script
scrp 2 19 18785 6
	doif wall = down
		anim [0 1 2 3 4]
		doif room ownr <> -1
			altr room targ 2 -0.01
			altr room targ 3 0.05
			altr room targ 4 0.01
		endi
		over
		kill ownr
	endi
endm

**Lifts
scrp 3 1 18885 1
*Ho boy. This is going to be a bit difficult. Well, here goes...
	clac 1
*First, check ov01
	doif ov01 = 0
*If you're the top one, just disappoint whoever it was that pushed you
		doif crea from = 1
			stim writ from 0 1
		endi
	else
*If it was the bottom level one, then move 'em on up!
*Tell from to wait
		doif crea from = 1
			stim writ from 75 1
		endi
		targ ov00
		setv va00 posx
		setv va01 posb
		targ ownr
*If it was the pointer, simply make all touching creatures move up.
		doif from = pntr
			etch 4 0 0
				seta va02 targ
				doif movs = 0
					mvsf va00 va01
					stim writ targ 94 1
				else
					doif movs = 3
						targ carr
						dpas 4 0 0
						targ va02
						mvsf va00 va01
						stim writ targ 94 1
					endi
				endi
			next
		else
*Otherwise, make the instigator move up.
			targ from
			seta va04 targ
			doif movs = 0
				mvsf va00 va01
				stim writ targ 94 1
			else
*This bit makes flying creatures get out of their vehicle before moving...although what a flying creature is doing in here is beyond me
				doif movs = 3
					targ carr
					dpas 4 0 0
					targ va04
					mvsf va00 va01
					stim writ targ 94 1
				endi
			endi
		endi
		targ ownr
		wait 1
		pose 0
	endi
endm

*Pull - Same as push with a few things switched around
scrp 3 1 18885 2
	clac 0
*First, check ov01
	doif ov01 = 1
*If you're the bottom one, just disappoint whoever it was that pushed you
		doif crea from = 1
			stim writ from 0 1
		endi
	else
*If it was the top level one, then move 'em on down!
*Tell from to wait
		doif crea from = 1
			stim writ from 75 1
		endi
		targ ov00
		setv va00 posx
		setv va01 posb
		targ ownr
*If it was the pointer, simply make all touching creatures move up.
		doif from = pntr
			etch 4 0 0
				seta va02 targ
				doif movs = 0
					mvsf va00 va01
					stim writ targ 94 1
				else
					doif movs = 3
						targ carr
						dpas 4 0 0
						targ va02
						mvsf va00 va01
						stim writ targ 94 1
					endi
				endi
			next
		else
*Otherwise, make the instigator move up.
			targ from
			seta va04 targ
			doif movs = 0
				mvsf va00 va01
				stim writ targ 94 1
			else
*This bit makes flying creatures get out of their vehicle before moving...although what a flying creature is doing in here is beyond me
				doif movs = 3
					targ carr
					dpas 4 0 0
					targ va04
					mvsf va00 va01
					stim writ targ 94 1
				endi
			endi
		endi
		targ ownr
		wait 1
		pose 0
	endi
endm

**Doors
scrp 2 2 18885 1
*Tell the norn on the other end to wait
	doif crea from = 1
		stim writ from 75 1
	endi
	targ ov00
	setv va00 posx
	setv va01 posb
	targ ownr
	doif from = pntr
		targ ov00
		cmrt 0
		etch 4 0 0
			doif movs = 0
				mvsf va00 va01
				stim writ from 95 1
			endi
		next
	else
		targ from
		doif movs = 0
			mvsf va00 va01
			stim writ from 95 1
		endi
	endi
	targ ownr
endm

**Waterfall Mushrooms
*Timer
scrp 2 3 18785 9
*If not being carried
	doif fall = 0 and carr = null
*If you're underwater, rot
		doif rtyp room ownr = 8 or rtyp room ownr = 9
			gsub rott
		endi
*Check to see if you can grow. If not, go dormant
		gsub chek
		gsub dorm
	endi

*Check your surroundings
	subr chek
*Check to see if you're on soil
		doif rtyp room ownr >= 5 and rtyp room ownr <= 7
*Continue if you are
			addv va10 1
		endi
*If you're in a valid room, check to see if there's enough water to absorb
		doif room ownr <> -1
			doif prop room ownr 3 >= 0.05
*Continue if wet enough
				addv va10 1
			endi
		endi
*Check to see how many mushrooms are around
		setv va00 0
		esee 2 4 18785
*Don't count PMs
			doif ov00 <> 4
				addv va00 1
			endi
		next
*If there's less than 8, move on
		doif va00 < 8
			addv va10 1
		endi
*Now see how many mushrooms you're touching
		setv va01 0
		etch 2 4 18785
*Don't count PMs
			doif ov00 <> 4
				addv va01 1
			endi
		next
*If you're in contact with less than 4, continue
		doif va01 < 4
			addv va10 1
		endi

*If you've met all the conditions, it is time to grow
		doif va10 >= 4
			gsub grow
		endi
	retn

*Growing time
	subr grow
*Get position
		setv va02 posl
		setv va03 post
		setv va04 perm
		setv va05 plne
		inst
*Create a shroom
		new: simp 2 4 18785 "waterfall_cmsh" 15 0 va05
		attr 196
		bhvr 3
		accg 1
		aero 0
		perm va04
		elas 0
		fric 100
*ov00 = state
		setv ov00 0
*ov01 = fruiting count
		setv ov01 0
*ov02 = countdown to growing another fruit
		setv ov02 0
		tick rand 100 300
		doif tmvt va02 va03 = 1
			mvto va02 va03
		else
			mvsf va02 va03
		endi
		targ ownr
*Subtract your requirement from the environment
		doif room ownr <> -1
			altr room ownr 3 -0.05
		endi
		kill ownr
	retn

*Dormancy
	subr dorm
*Subtract 1 from the dormancy counter
		subv ov00 1

*If you've hit 0, rot away
		doif ov00 <= 0
			gsub rott
		endi
	retn

*Rotting
	subr rott
*If in a valid room, add some water and nutrients
		doif room ownr <> -1
			altr room targ 3 0.01
			altr room targ 4 0.01
		endi
		kill ownr
	retn
endm

*Seed eat
scrp 2 3 18785 12
	sndc "chwp"
	stim writ from 77 rand 1 3

* Glucose
	chem 3 0.5
* Glycogen	
	chem 4 0.5
* Starch	
	chem 5 0.5		
* Fatty acid	
	chem 6 0.3
* Triglyceride	
	chem 8 0.5
* Adipose tissue: When your creature needs to store fat for the long-term, the fat becomes this. This is the stuff that makes them fat, but they'll never really be obese.	
	chem 9 0.5	
* Fat	
	chem 10 0.3	
* Protein	
	chem 12 1.0
* Amino acid	
	chem 13 0.3		
* Anti-oxidant:	Cures carbon monoxide poisoning.	
	chem 93 0.5
* Sodium thiosulphate: Cures cyanide poisoning.	
	chem 96 0.5
* Arnica: Cures glycotoxin poisoning.	
	chem 97 0.5	
* Vitamin E: Keeps reproductive organs healthy.			
	chem 98 0.5
* Vitamin C: Keeps bones healthy, aids in healing from injuries.
	chem 99 0.5	
* Antihistamine	
	chem 100 0.5	
* Life: Creature ages as this depletes. A creature dies of old age when it nears zero. Continually injecting this will effectively make your creature immortal.	
	chem 125 0.5

	kill ownr
endm

*Seed exception
scrp 2 3 18785 255
endm

*Mushroom Timer
scrp 2 4 18785 9
*ov00 = state
*0 is growing, 1 is fruiting, 2 is waiting to grow a new fruit, and 3 is dying
	doif ov00 = 0
		gsub grow
	elif ov00 = 1
		gsub frut
	elif ov00 = 2
		gsub gfrt
	elif ov00 = 3
		gsub deth
*Mushrooms whose state is set to 4 are PMs
	elif ov00 = 4
		gsub popm
	endi

*Population Monitor states
	subr popm
*ov01 for PMs is their state
		doif ov01 = 0
*Growing
			gsub grow
		elif ov01 = 1
*Monitoring the population
			gsub chkp
		elif ov01 = 2
*Generating new plants
			gsub frut
		elif ov01 = 3
*Growing new fruit
			gsub gfrt
		endi
	retn

*Growing
	subr grow
		doif pose <= 5
			setv va00 pose
			addv va00 1
			pose va00
		else
*If not a PM, start producing fruit
			doif ov00 <> 4
				setv ov00 1
*Otherwise, begin population monitoring
			else
				setv ov01 1
			endi
		endi
	retn

*Checking the population (PM)
	subr chkp
		setv va00 0

*Get your metaroom location (since these are not limited to Silence Falls)
		setv va10 gmap posx posy

*Count mushrooms
		enum 2 4 18785
*Make sure that they're in the same metaroom as you
			doif gmap posx posy = va10
*Don't count the other PM
				doif ov00 <> 4
					addv va00 1
				endi
			endi
		next

*Count seeds
		enum 2 3 18785
			doif gmap posx posy = va10
				addv va00 1
			endi
		next

*Count fruit
		enum 2 11 18785
			doif gmap posx posy = va10
				addv va00 1
			endi
		next

*If there are no plants or seeds to speak of, make some fruit
		doif va00 = 0
			setv ov01 2
		endi
	retn

*Generating fruit
	subr frut
*Don't bother adding to the fruit count if a PM
		doif ov00 = 4
			setv va02 posl
			setv va03 post
			addv va02 4
			addv va03 11
			setv va04 plne
			setv va05 perm
			inst
			new: simp 2 11 18785 "waterfall_cmsh" 1 15 va04
			attr 194
			bhvr 48
			accg 1
			aero 5
			perm va05
			elas 10
			fric 50
			tick rand 100 300
			emit 8 0.5
			mvsf va02 va03
*Start remaking your fruit
			targ ownr
			pose 14
			setv ov01 3
		else
			doif ov01 < 2
				setv va02 posl
				setv va03 post
				addv va02 4
				addv va03 11
				setv va04 plne
				setv va05 perm
				inst
				new: simp 2 11 18785 "waterfall_cmsh" 1 15 va04
				attr 194
				bhvr 48
				accg 1
				aero 5
				perm va05
				elas 10
				fric 50
				tick rand 100 300
				emit 8 0.5
				mvsf va02 va03
				targ ownr
				pose 14
				addv ov01 1
				setv ov00 2
			endi
		endi
	retn

*Regrowing fruit
	subr gfrt
*If a PM, just regrow the fruit without adding to anythig
		doif ov00 = 4
			pose 6
			setv ov01 1
		else
*Regrow the fruit if you still have life remaining
			doif ov01 < 2
				pose 6
				setv ov00 1
*Otherwise, prepare to die
			elif ov01 >= 2
				pose 6
				setv ov00 3
			endi
		endi
	retn

*Dying
	subr deth
		tick 10
		doif pose < 13
			setv va00 pose
			addv va00 1
			pose va00
		else
			doif room ownr ne -1
				altr room targ 3 0.05
				altr room targ 4 0.01
			endi
			kill ownr
		endi
	retn
endm

scrp 2 4 18785 1
*Produce a fruit if old enough and ready for it
	stim writ from 84 1
*Don't bother adding to the fruit count if a PM
	doif ov00 = 4
		setv va02 posl
		setv va03 post
		addv va02 4
		addv va03 11
		setv va04 plne
		setv va05 perm
		inst
		new: simp 2 11 18785 "waterfall_cmsh" 1 15 va04
		attr 194
		bhvr 48
		accg 1
		aero 5
		perm va05
		elas 10
		fric 50
		tick rand 100 300
		emit 8 0.5
		mvsf va02 va03
*Start remaking your fruit
		targ ownr
		pose 14
		setv ov01 3
	else
		doif ov00 = 1
			setv va02 posl
			setv va03 post
			addv va02 4
			addv va03 11
			setv va04 plne
			setv va05 perm
			inst
			new: simp 2 11 18785 "waterfall_cmsh" 1 15 va04
			attr 194
			bhvr 48
			accg 1
			aero 5
			perm va05
			elas 10
			fric 50
			tick rand 100 300
			emit 8 0.5
			mvsf va02 va03
			targ ownr
			pose 14
			addv ov01 1
			setv ov00 2
		endi
	endi
endm

scrp 2 4 18785 2
*Produce a fruit if old enough and ready for it
	stim writ from 84 1
*Don't bother adding to the fruit count if a PM
	doif ov00 = 4
		setv va02 posl
		setv va03 post
		addv va02 4
		addv va03 11
		setv va04 plne
		setv va05 perm
		inst
		new: simp 2 11 18785 "waterfall_cmsh" 1 15 va04
		attr 194
		bhvr 48
		accg 1
		aero 5
		perm va05
		elas 10
		fric 50
		tick rand 100 300
		emit 8 0.5
		mvsf va02 va03
*Start remaking your fruit
		targ ownr
		pose 14
		setv ov01 3
	else
		doif ov00 = 1
			setv va02 posl
			setv va03 post
			addv va02 4
			addv va03 11
			setv va04 plne
			setv va05 perm
			inst
			new: simp 2 11 18785 "waterfall_cmsh" 1 15 va04
			attr 194
			bhvr 48
			accg 1
			aero 5
			perm va05
			elas 10
			fric 50
			tick rand 100 300
			emit 8 0.5
			mvsf va02 va03
			targ ownr
			pose 14
			addv ov01 1
			setv ov00 2
		endi
	endi
endm

*Exception
scrp 2 4 18785 255
endm

scrp 2 11 18785 9
*The fruit rots, sending seeds everywhere
	setv va00 posx
	subv va00 25
	setv va01 posy
	setv va02 wdth
	subv va01 84
	inst
	reps rand 2 3
		new: simp 2 3 18785 "waterfall_cmsh" 1 16 rand 1000 6000
		attr 194
		bhvr 48
		accg 1
		aero 0
		perm rand 30 100
		elas 50
		fric 75
		tick rand 100 300
*Dormancy counter
		setv ov00 rand 10 15
		emit 7 0.5
		puhl -1 24 82
		mvsf va00 va01
		velo rand -10 10 rand -4 -6
	repe
	targ ownr
	doif room ownr ne -1
		altr room targ 3 0.01
		altr room targ 4 0.01
	endi
	kill ownr
endm

scrp 2 11 18785 12
	snde "chwp"
	stim writ from 79 rand 1 3

* Glucose
	chem 3 0.5
* Glycogen	
	chem 4 0.5
* Starch	
	chem 5 0.5		
* Fatty acid	
	chem 6 0.3
* Triglyceride	
	chem 8 0.5
* Adipose tissue: When your creature needs to store fat for the long-term, the fat becomes this. This is the stuff that makes them fat, but they'll never really be obese.	
	chem 9 0.5	
* Fat	
	chem 10 0.3	
* Protein	
	chem 12 1.0
* Amino acid	
	chem 13 0.3		
* Anti-oxidant:	Cures carbon monoxide poisoning.	
	chem 93 0.5
* Sodium thiosulphate: Cures cyanide poisoning.	
	chem 96 0.5
* Arnica: Cures glycotoxin poisoning.	
	chem 97 0.5	
* Vitamin E: Keeps reproductive organs healthy.			
	chem 98 0.5
* Vitamin C: Keeps bones healthy, aids in healing from injuries.
	chem 99 0.5	
* Antihistamine	
	chem 100 0.5	
* Life: Creature ages as this depletes. A creature dies of old age when it nears zero. Continually injecting this will effectively make your creature immortal.	
	chem 125 0.5

	setv va00 posl
	setv va01 posy
	setv va02 wdth
	divv va02 2
	subv va00 va02
	inst
	reps rand 2 3
		new: simp 2 3 18785 "waterfall_cmsh" 1 16 rand 1000 6000
		attr 194
		bhvr 48
		accg 1
		aero 0
		perm rand 30 100
		elas 50
		fric 75
		tick rand 100 300
*Dormancy counter
		setv ov00 rand 10 15
		emit 7 0.5
		puhl -1 24 82
		mvsf va00 va01
		velo rand -10 10 rand -4 -6
	repe
	targ ownr
	kill ownr
endm

**Watercup Shroom
*Spore timer
scrp 2 3 18885 9
*First, make sure you're on proper soil
	doif rtyp room ownr >= 5 and rtyp room ownr <= 7
*If yes, add one to growth check
		addv ov00 1
	else
*If not, check to see if you're underwater
		doif rtyp room ownr = 8 or rtyp room ownr = 9
*Check to see if you're not completely submerged
			setv va00 grap posx post
			doif rtyp va00 <> 8 and rtyp va00 <> 9
*Add one to grow count if only partially submerged
				addv ov00 1
			else
*Otherwise, rot immediately
				gsub rott
			endi
		endi
	endi

*Now, check to see how many mushrooms are growing nearby
	setv va00 0
	esee 2 4 18885
*Don't count PMs
		doif ov00 <> 4
			addv va00 1
		endi
	next
*If there's less than 5, add to the grow count
	doif va00 < 5
		addv ov00 1
	endi

*Next, check to see how many plants you're touching
	setv va00 0
	etch 2 4 18885
*Don't count PMs
		doif ov00 <> 4
			addv va00 1
		endi
	next
*If you're touching less than 3, add to the grow count
	doif va00 < 3
		addv ov00 1
	endi

*If you've accumulated enough boosts, grow
	doif ov00 = 3
		gsub grow
*Otherwise, wait a while
	else
*Reset the grow count
		setv ov00 0
*If not underwater, go into dormancy
		doif rtyp room ownr <> 8 and rtyp room ownr <> 9
			gsub dorm
*Otherwise, rot
		else
			gsub rott
		endi
	endi

*Growing
	subr grow
*Get positions
		setv va00 posl
		setv va01 post
*Get plane and permability
		setv va02 plne
		setv va03 perm
*Determine what color you grow into
		setv va04 rand 0 2
		inst
	*Teal Shroom
		doif va04 = 0
			setv va06 1
	*Blue Shroom
		elif va04 = 1
			setv va06 6
	*Red Shroom
		else
			setv va06 11
		endi
		setv va08 0
	* Dark variation
		doif rand 0 1 eq 1
*			addv va06 21
			setv va08 1
		endi

		new: simp 2 4 18885 "watercup_shroom" 5 va06 va02
		setv ov01 va04

		* Dark variation
		doif va08 eq 1
			alph rand 50 150 1
		endi

		setv ov04 va08
		attr 196
		bhvr 1
		accg 4
		aero 0
		perm va03
		elas 0
		fric 100
*ov00 = state
		setv ov00 0
*ov02 = cap count
		setv ov02 0
*ov03 = rotted flag
		setv ov03 0
		tick rand 150 450
		mvsf va00 va01
		targ ownr
		kill ownr
	retn

*Dormancy
	subr dorm
*If you've lived long enough, rot
		addv ov01 1

		doif ov01 > 10
			gsub rott
		endi
	retn

*Rotting
	subr rott
*Add nutrients if in a valid room, then die
		doif room ownr <> -1
			altr room targ 4 0.01
		endi
		kill ownr
	retn
endm

*Spore eat
scrp 2 3 18885 12
	doif crea from = 1
		stim writ from 77 1

		* Glucose
			chem 3 0.5
		* Glycogen	
			chem 4 0.5
		* Starch	
			chem 5 0.5		
		* Fatty acid	
			chem 6 0.3
		* Triglyceride	
			chem 8 0.5
		* Adipose tissue: When your creature needs to store fat for the long-term, the fat becomes this. This is the stuff that makes them fat, but they'll never really be obese.	
			chem 9 0.5	
		* Fat	
			chem 10 0.3	
		* Protein	
			chem 12 1.0
		* Amino acid	
			chem 13 0.3		
		* Anti-oxidant:	Cures carbon monoxide poisoning.	
			chem 93 0.5
		* Sodium thiosulphate: Cures cyanide poisoning.	
			chem 96 0.5
		* Arnica: Cures glycotoxin poisoning.	
			chem 97 0.5	
		* Vitamin E: Keeps reproductive organs healthy.			
			chem 98 0.5
		* Vitamin C: Keeps bones healthy, aids in healing from injuries.
			chem 99 0.5	
		* Antihistamine	
			chem 100 0.5	
		* Life: Creature ages as this depletes. A creature dies of old age when it nears zero. Continually injecting this will effectively make your creature immortal.	
			chem 125 0.5		
	endi
	kill ownr
endm

*Spore Exception
scrp 2 3 18885 255
endm

*Mushroom push
scrp 2 4 18885 1
	doif crea from = 1
*Stim the creature with "played with friendly plant
		stim writ from 84 1
	endi
*If producing caps, make one if prodded
*If a PM, use this
	doif ov00 = 4
*If monitoring or actually producing caps
		doif ov02 = 1 or ov02 = 2
*Activate if not so already
			doif pose <> 1
				pose 1
			endi
*Get position
			setv va00 posl
			setv va01 post
			subv va01 18
*Get plane and permability
			setv va02 plne
			addv va02 1
			setv va03 perm
*Determine number of seeds to make by the number lying around
			setv va04 0
			esee 2 3 18885
				addv va04 1
			next
*If there's less than 3, create 4-5
			doif va04 < 3
				setv va10 rand 4 5
*If there's between 3 and 6, create 2-3
			elif va04 >= 3 and va04 < 6
				setv va10 rand 2 3
*If there's between 6 and 9, create 1-2 seeds
			elif va04 >= 6 and va04 < 9
				setv va10 rand 1 2
			else
*Don't bother with the seeds
				setv va10 0
			endi
			inst
*Generate cap

	*If Teal Shroom
			doif mv01 = 0
				setv va06 16
	*If Blue Shroom
			elif mv01 = 1
				setv va06 18
	*If Red Shroom
			else
				setv va06 20
			endi

			doif ov04 eq 1
				addv va06 21
			endi
			new: simp 2 8 18885 "watercup_shroom" 2 va06 va02

			attr 195
			bhvr 48
			accg 2
			aero 0
			perm va03
			elas 0
			fric 50
*ov00 = number of seeds to produce
			setv ov00 va10
			tick rand 150 450
			emit 6 0.1
			mvsf va00 va01
			targ ownr
*Assume normal capless pose
			pose 2
*Prepare to regrow
			setv ov02 3
		endi
	else
		doif ov00 = 1
*Get position
			setv va00 posl
			setv va01 post
			subv va01 18
*Get plane and permability
			setv va02 plne
			addv va02 1
			setv va03 perm
*Determine number of seeds to make by the number lying around
			setv va04 0
			esee 2 3 18885
				addv va04 1
			next
*If there's less than 3, create 4-5
			doif va04 < 3
				setv va10 rand 4 5
*If there's between 3 and 6, create 2-3
			elif va04 >= 3 and va04 < 6
				setv va10 rand 2 3
*If there's between 6 and 9, create 1-2 seeds
			elif va04 >= 6 and va04 < 9
				setv va10 rand 1 2
			else
*Don't bother with the seeds
				setv va10 0
			endi
			inst
*Generate cap
		*If Teal Shroom
			doif mv01 = 0
				setv va06 16
	*If Blue Shroom
			elif mv01 = 1
				setv va06 18
	*If Red Shroom
			else
				setv va06 20
			endi

			doif ov04 eq 1
				addv va06 21
			endi
			new: simp 2 8 18885 "watercup_shroom" 2 va06 va02

			attr 195
			bhvr 48
			accg 2
			aero 0
			perm va03
			elas 0
			fric 50
*ov00 = number of seeds to produce
			setv ov00 va10
			tick rand 150 450
			emit 6 0.1
			mvsf va00 va01
			targ ownr
*Assume dropped cap pose and prepare to regrow
			pose 2
			addv ov02 1
			setv ov00 2
		endi
	endi
endm

*Mushroom timer
scrp 2 4 18885 9
*ov00 is state
*Growing
	doif ov00 = 0
		gsub grow
*Producing caps	
	elif ov00 = 1
		gsub caps
*Regrowing caps
	elif ov00 = 2
		gsub gcap
*Dying
	elif ov00 = 3
		gsub die_
*Population monitor
	elif ov00 = 4
		gsub popm
	endi

*Population monitor state
	subr popm
*ov02 is state here
*0 is growing
		doif ov02 = 0
			gsub grow
*1 is monitoring, but inactive
		elif ov02 = 1
			gsub cpop
*2 is producing caps
		elif ov02 = 2
			gsub caps
*3 is regrowing caps
		elif ov02 = 3
			gsub gcap
		endi
	retn

*Growing
	subr grow
		doif pose <> 1
			pose 1
		else
*If not a PM, simply move on as normal
			doif ov00 <> 4
				setv ov00 1
			else
*Determine whether or not to activate
*Determine the amount of plants, spores, and caps around
				setv va00 0
				setv va10 gmap posx posy
*Spores
				enum 2 3 18885
*Make sure they're in the same area as you
					doif gmap posx posy = va10
						addv va00 1
					endi
				next
*Plants
				enum 2 4 18885
					doif gmap posx posy = va10
*Don't count other PMs
						doif ov00 <> 4
							addv va00 1
						endi
					endi
				next
*Caps
				enum 2 8 18885
					doif gmap posx posy = va10
						addv va00 1
					endi
				next
*If there are 0, remain active and produce a cap
				doif va00 = 0
					setv ov02 2
*Otherwise, deactivate and silently monitor the population
				else
					pose 3
					setv ov02 1
				endi
			endi
		endi
	retn

*Population monitoring
	subr cpop
*Determine the amount of plants, spores, and caps around
		setv va00 0
		setv va10 gmap posx posy
*Spores
		enum 2 3 18885
*Make sure they're in the same area as you
			doif gmap posx posy = va10
				addv va00 1
			endi
		next
*Plants
		enum 2 4 18885
			doif gmap posx posy = va10
*Don't count other PMs
				doif ov00 <> 4
					addv va00 1
				endi
			endi
		next
*Caps
		enum 2 8 18885
			doif gmap posx posy = va10
				addv va00 1
			endi
		next

*If there are no plants or their productions around, prepare to make a cap
		doif va00 = 0
			pose 1
			setv ov02 2
		endi
	retn

*Dropping caps
	subr caps
*Add to cap growth if not a PM
		doif ov00 <> 4
			addv ov02 1
		endi
*Get position
		setv va00 posl
		setv va01 post
		subv va01 18
*Get plane and permability
		setv va02 plne
		addv va02 1
		setv va03 perm
*Determine number of seeds to make by the number lying around
		setv va04 0
		esee 2 3 18885
			addv va04 1
		next
*If there's less than 3, create 4-5
		doif va04 < 3
			setv va10 rand 4 5
*If there's between 3 and 6, create 2-3
		elif va04 >= 3 and va04 < 6
			setv va10 rand 2 3
*If there's between 6 and 9, create 1-2 seeds
		elif va04 >= 6 and va04 < 9
			setv va10 rand 1 2
		else
*Don't bother with the seeds
			setv va10 0
		endi
		inst
*Generate cap
	*If Teal Shroom
		doif mv01 = 0
			setv va06 16
	*If Blue Shroom
		elif mv01 = 1
			setv va06 18
	*If Red Shroom
		else
			setv va06 20
		endi

		doif mv04 eq 1
			addv va06 21
		endi
		new: simp 2 8 18885 "watercup_shroom" 2 va06 va02

		attr 195
		attr 195
		bhvr 48
		accg 2
		aero 0
		perm va03
		elas 0
		fric 50
*ov00 = number of seeds
		setv ov00 va10
		tick rand 150 450
		emit 6 0.1
		mvsf va00 va01
		targ ownr
*Assume dropped cap pose and prepare to regrow
		pose 2
		doif ov00 <> 4
			setv ov00 2
		else
			setv ov02 3
		endi
	retn

*Regrowing caps
	subr gcap
*If you're a PM, regrow your cap, perform a population check, and deactivate if you're not needed
		doif ov00 = 4
			pose 1
*Determine the amount of plants, spores, and caps around
			setv va00 0
			setv va10 gmap posx posy
*Spores
			enum 2 3 18885
*Make sure they're in the same area as you
				doif gmap posx posy = va10
					addv va00 1
				endi
			next
*Plants
			enum 2 4 18885
				doif gmap posx posy = va10
*Don't count other PMs
					doif ov00 <> 4
						addv va00 1
					endi
				endi
			next
*Caps
			enum 2 8 18885
				doif gmap posx posy = va10
					addv va00 1
				endi
			next

*If you're no longer needed, deactivate and continue silently monitoring the population
			doif va00 <> 0
				pose 3
				setv ov02 1
			else
*Produce another cap
				setv ov02 2
			endi

		else
*If you're a normal mushroom who has produced only 1 cap, regrow your cap
			doif ov02 < 2
				pose 1
				setv ov00 1
*Otherwise, prepare to die
			else
				setv ov00 3
			endi
		endi
	retn

*Dying
	subr die_
*Determine if you have a cap if you haven't rotted yet
		doif ov03 = 0
*If you have a cap, assume "rotted with cap on" pose
			doif pose = 1
				pose 3
			else
*Otherwise, rot without your cap
				pose 4
			endi
			setv ov03 1
		else
*Add nutrients to the environment and die
			doif room ownr <> -1
				altr room targ 4 0.05
			endi
			kill ownr
		endi
	retn
endm

*Exception
scrp 2 4 18885 255
endm

*Fruit timer
scrp 2 8 18885 9
*Start rotting if it's been long enough
	doif pose = 0
		pose 1
	else
*Do this only if you're making seeds
		doif ov00 <> 0
*Get positions
			setv va00 posl
			setv va01 post
			inst
*Make spores
			reps ov00
				new: simp 2 3 18885 "watercup_shroom" 1 0 rand 1000 6000
				attr 195
				bhvr 48
				accg 1
				aero 0
				perm rand 30 100
				elas 10
				fric 70
*ov00 = growth checks
				setv ov00 0
*ov01 = dormancy counter
				setv ov01 0
				rnge 250
				tick rand 150 450
				puhl -1 16 31
				emit 7 0.1
				mvsf va00 va01
				velo rand -10 10 rand -10 -1
			repe
		endi
		targ ownr
*Produce nutrients and die
		doif room ownr <> -1
			altr room targ 4 0.02
		endi
		kill ownr
	endi
endm

*Fruit eat
scrp 2 8 18885 12
	sndc "chwp"
*If a creature, stim it with "eaten fruit" depending on pose
	doif crea from = 1
		doif pose = 0
			stim writ from 78 1
		else
			stim writ from 78 0.5
		endi

	* Glucose
		chem 3 0.5
	* Glycogen	
		chem 4 0.5
	* Starch	
		chem 5 0.5		
	* Fatty acid	
		chem 6 0.3
	* Triglyceride	
		chem 8 0.5
	* Adipose tissue: When your creature needs to store fat for the long-term, the fat becomes this. This is the stuff that makes them fat, but they'll never really be obese.	
		chem 9 0.5	
	* Fat	
		chem 10 0.3	
	* Protein	
		chem 12 1.0
	* Amino acid	
		chem 13 0.3		
	* Anti-oxidant:	Cures carbon monoxide poisoning.	
		chem 93 0.5
	* Sodium thiosulphate: Cures cyanide poisoning.	
		chem 96 0.5
	* Arnica: Cures glycotoxin poisoning.	
		chem 97 0.5	
	* Vitamin E: Keeps reproductive organs healthy.			
		chem 98 0.5
	* Vitamin C: Keeps bones healthy, aids in healing from injuries.
		chem 99 0.5	
	* Antihistamine	
		chem 100 0.5	
	* Life: Creature ages as this depletes. A creature dies of old age when it nears zero. Continually injecting this will effectively make your creature immortal.	
		chem 125 0.5

	endi
*Produce spores if you're making seeds
	doif mv00 <> 0
		setv va00 posl
		setv va01 post
		inst
*Make spores
		reps ov00
			new: simp 2 3 18885 "watercup_shroom" 1 0 rand 1000 6000
			attr 195
			bhvr 48
			accg 1
			aero 0
			perm rand 30 100
			elas 10
			fric 70
*ov00 = growth checks
			setv ov00 0
*ov01 = dormancy counter
			setv ov01 0
			rnge 250
			tick rand 150 450
			puhl -1 16 31
			emit 7 0.1
			mvsf va00 va01
			velo rand -10 10 rand -10 -1
		repe
	endi
	targ ownr
	kill ownr
endm

***Begin Remove Scripts***
rscr
enum 1 1 18885
	kill targ
next
enum 1 2 18885
	kill targ
next
enum 1 1 18886
	kill targ
next
enum 1 1 18887
	kill targ
next
enum 1 1 18888
	kill targ
next
enum 1 1 18889
	kill targ
next
enum 1 1 18785
	kill targ
next
enum 2 19 18785
	kill targ
next
enum 3 1 18885
	kill targ
next
enum 2 2 18885
	kill targ
next
enum 2 3 18785
	kill targ
next
enum 2 4 18785
	kill targ
next
enum 2 11 18785
	kill targ
next
enum 2 4 18885
	kill targ
next
enum 2 3 18885
	kill targ
next
enum 2 8 18885
	kill targ
next
scrx 1 1 18886 9
scrx 1 1 18886 255
scrx 1 1 18887 1000
scrx 1 1 18888 9
scrx 1 1 18889 6
scrx 1 1 18889 9
scrx 1 1 18785 9
scrx 2 19 18785 9
scrx 2 19 19885 6
scrx 3 1 18885 1
scrx 3 1 18885 2
scrx 2 2 18885 1
scrx 2 3 18785 9
scrx 2 3 18785 12
scrx 2 3 18785 255
scrx 2 4 18785 1
scrx 2 4 18785 2
scrx 2 4 18785 9
scrx 2 4 18785 255
scrx 2 11 18785 9
scrx 2 11 18785 12
scrx 2 4 18885 1
scrx 2 4 18885 9
scrx 2 4 18885 255
scrx 2 3 18885 9
scrx 2 3 18885 12
scrx 2 3 18885 255
scrx 2 4 18885 9
scrx 2 4 18885 12